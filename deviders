#include <stdio.h>
#include <math.h>

int primenum( int );
int checking( int, int );
main()
    { int number;
       printf( "\nEnter number = " );
        scanf( "%d", &number );
         primenum( number );
          getchar();
           getchar();         
	  }
int primenum( int number ) 
	        { int sqroot = sqrt( number ), counter = 1;
	           for ( int i = 2; i <= sqroot; i++)
	   		       { if ( number % i == 0)             /* Проверяем есть ли целый делитель у числа number, если есть то передаем число функции checking */
			          { checking( number, sqroot );
			             break;
			          }
			           else   
                    { counter++;          /* Если целый делитель не найден, то к переменной counter прибавляется единица */
				            }
			         }
			   if ( counter == sqroot )           /* Если значение counter равно количеству итераций цикла, то делаем вывод, что число простое */
		   	       printf( "\n %d is a prime number ", number );    
			     
	        }   	
      
int checking( int number, int sqroot)
            { int counter = 1;
               for (int i = 1; i <= sqroot; i++)
                    { if ( number % i == 0 && number / i != sqroot )              /* Находим все целочисленные делители числа number, за исключением корня квадратного, если он имеется */
			             { printf( "\n Devider %d = %d ", 2 * counter-1, i );
			                printf( "\n Devider %d = %d ", 2 * counter , number / i );
                             counter++;
                   }
			          if ( number / i == sqroot )           /* Убираем лишний делитель равный корню квадратному из числа number */
			             { printf( "\n Devider %d = %d ", 2 * counter - 1, i );
   			                counter++;
                   }       
			               } 
			           
	          }      
